{"version":3,"file":"static/js/RegisterViewLazy.bf3b5087.chunk.js","mappings":"0PASA,MA2HA,EA3HqB,KACnB,MAAMA,GAAUC,EAAAA,EAAAA,OACTC,IAAYC,EAAAA,EAAAA,OACZC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAiBC,IAAsBN,EAAAA,EAAAA,UAAS,IAEjDO,EAAe,IAAkC,IAA/BC,QAAQ,KAAEV,EAAF,MAAQW,IAAc,EACpD,OAAQX,GACN,IAAK,OACH,OAAOC,EAAQU,GACjB,IAAK,QACH,OAAOP,EAASO,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,IAAK,kBACH,OAAOH,EAAmBG,GAC5B,QACE,OAVJ,EA2CF,OACE,4BACE,+CAEA,gBAAKC,UAAU,cAAf,UACE,kBAAMC,SAlCSC,UAEnB,GADAC,EAAEC,iBAEAhB,EAAKiB,QAAU,GACfd,EAAMc,QAAU,GAChBZ,EAASY,QAAU,GACnBV,EAAgBU,QAAU,EAM1B,OAJAC,EAAAA,eAAAA,IAAmBC,EAAe,CAAC,QACnCC,EAAAA,EAAAA,OAAM,CACJC,KAAO,uBAIX,UACQvB,EAAS,CAAEE,OAAMG,QAAOE,WAAUE,oBAAmBe,SAC3D1B,EAAQ2B,KAAK,UACbnB,EAAS,IACTE,EAAY,IACZL,EAAQ,IACRO,EAAmB,GAMpB,CALC,MAAOgB,GACPN,EAAAA,eAAAA,IAAmBC,EAAe,CAAC,IACnCC,EAAAA,EAAAA,OAAM,CACJC,KAAO,GAAEG,EAAMC,KAAKC,WAEvB,GAQiCd,UAAU,aAAae,aAAa,MAAlE,WACE,qCAEE,kBACEC,KAAK,OACL5B,KAAK,OACL6B,GAAG,OACHC,YAAY,OACZnB,MAAOX,EACP+B,SAAUtB,EACVuB,UAAQ,EACRC,UAAW,EACXC,UAAW,SAGf,qCAEE,kBACEN,KAAK,QACL5B,KAAK,QACL6B,GAAG,QACHC,YAAY,QACZnB,MAAOR,EACP4B,SAAUtB,EACVuB,UAAQ,EACRC,UAAW,EACXC,UAAW,SAGf,yCAEE,kBACEN,KAAK,WACLC,GAAG,WACH7B,KAAK,WACL8B,YAAY,WACZnB,MAAON,EACP0B,SAAUtB,EACVuB,UAAQ,EACRC,UAAW,EACXC,UAAW,SAGf,gDAEE,kBACEN,KAAK,WACLC,GAAG,kBACH7B,KAAK,kBACL8B,YAAY,kBACZnB,MAAOJ,EACPwB,SAAUtB,EACVuB,UAAQ,EACRC,UAAW,EACXC,UAAW,SAGf,mBAAQN,KAAK,SAAShB,UAAU,aAAhC,4BA9DR,C","sources":["views/RegisterView.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useRegisterMutation } from '../redux/auth/auth-operation';\nimport { alert, defaultModules } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport * as PNotifyMobile from '@pnotify/mobile';\nimport '@pnotify/mobile/dist/PNotifyMobile.css';\nimport '../components/contactForm/ContactForm.css';\n\nconst RegisterView = () => {\n  const history = useHistory();\n  const [register] = useRegisterMutation();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeat_password, setRepeat_password] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      case 'repeat_password':\n        return setRepeat_password(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (\n      name.length <= 0 ||\n      email.length <= 0 ||\n      password.length <= 0 ||\n      repeat_password.length <= 0\n    ) {\n      defaultModules.set(PNotifyMobile, {});\n      alert({\n        text: `Fill in the fields`,\n      });\n      return;\n    }\n    try {\n      await register({ name, email, password, repeat_password }).unwrap();\n      history.push('/login');\n      setEmail('');\n      setPassword('');\n      setName('');\n      setRepeat_password('');\n    } catch (error) {\n      defaultModules.set(PNotifyMobile, {});\n      alert({\n        text: `${error.data.message}`,\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Registration page</h1>\n\n      <div className=\"ContactForm\">\n        <form onSubmit={handleSubmit} className=\"form-input\" autoComplete=\"off\">\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\"name\"\n              value={name}\n              onChange={handleChange}\n              required\n              minLength={3}\n              maxLength={50}\n            />\n          </label>\n          <label>\n            Mail\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={handleChange}\n              required\n              minLength={6}\n              maxLength={40}\n            />\n          </label>\n          <label>\n            Password\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={handleChange}\n              required\n              minLength={6}\n              maxLength={30}\n            />\n          </label>\n          <label>\n            Repeat password\n            <input\n              type=\"password\"\n              id=\"repeat_password\"\n              name=\"repeat_password\"\n              placeholder=\"repeat password\"\n              value={repeat_password}\n              onChange={handleChange}\n              required\n              minLength={6}\n              maxLength={30}\n            />\n          </label>\n          <button type=\"submit\" className=\"formButton\">\n            Sign Up\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterView;\n"],"names":["history","useHistory","register","useRegisterMutation","name","setName","useState","email","setEmail","password","setPassword","repeat_password","setRepeat_password","handleChange","target","value","className","onSubmit","async","e","preventDefault","length","defaultModules","PNotifyMobile","alert","text","unwrap","push","error","data","message","autoComplete","type","id","placeholder","onChange","required","minLength","maxLength"],"sourceRoot":""}