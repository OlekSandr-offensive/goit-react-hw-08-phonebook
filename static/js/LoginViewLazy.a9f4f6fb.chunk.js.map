{"version":3,"file":"static/js/LoginViewLazy.a9f4f6fb.chunk.js","mappings":"wOA4FA,UA9EkB,WAEhB,OAAgBA,EAAAA,EAAAA,MAATC,GAAP,eACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SA2BN,OACE,4BACE,mHAEA,gBAAKC,UAAU,cAAf,UACE,kBAAMC,SA5BS,SAAAC,GAEnB,GADAA,EAAMC,iBACFX,EAAMY,QAAU,GAAKV,EAASU,QAAU,EAK1C,OAJAC,EAAAA,eAAAA,IAAmBC,EAAe,SAClCC,EAAAA,EAAAA,OAAM,CACJC,KAAK,oFAITlB,EAAM,CAAEE,MAAAA,EAAOE,SAAAA,IACZe,OACAC,OAAM,WACLL,EAAAA,eAAAA,IAAmBC,EAAe,KAClCC,EAAAA,EAAAA,OAAM,CACJC,KAAK,oJAKXf,EAAS,IACTE,EAAY,KAQsBK,UAAU,aAAaW,aAAa,MAAlE,WACE,+DAEE,kBACEC,KAAK,QACLC,GAAG,QACHf,KAAK,QACLC,MAAOP,EACPsB,SAAUlB,EACVmB,QAAQ,sBAIZ,qEAEE,kBACEH,KAAK,WACLC,GAAG,WACHf,KAAK,WACLC,MAAOL,EACPoB,SAAUlB,EACVmB,QAAQ,uCACRC,MAAM,mHAIV,mBAAQJ,KAAK,SAAb,gD","sources":["views/LoginView.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n// import { useDispatch } from 'react-redux';\nimport {\n  logIn,\n  fetchCurrentUser,\n  useLogInMutation,\n} from '../redux/auth/auth-operation';\nimport { alert, defaultModules } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport * as PNotifyMobile from '@pnotify/mobile';\nimport '@pnotify/mobile/dist/PNotifyMobile.css';\nimport '../components/contactForm/ContactForm.css';\n\nconst LoginView = () => {\n  // const dispatch = useDispatch();\n  const [logIn] = useLogInMutation();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (email.length <= 0 || password.length <= 0) {\n      defaultModules.set(PNotifyMobile, {});\n      alert({\n        text: `Заповніть поля`,\n      });\n      return;\n    }\n    logIn({ email, password })\n      .then()\n      .catch(() => {\n        defaultModules.set(PNotifyMobile, {});\n        alert({\n          text: `Не вдалося авторизуватися`,\n        });\n      });\n    // dispatch(logIn({ email, password }));\n    // dispatch(fetchCurrentUser());\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Сторінка логіна</h1>\n\n      <div className=\"ContactForm\">\n        <form onSubmit={handleSubmit} className=\"form-input\" autoComplete=\"off\">\n          <label>\n            Пошта\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              pattern=\"[^ @]*@[^ @]*\"\n              // required\n            />\n          </label>\n          <label>\n            Пароль\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n              title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\n              // required\n            ></input>\n          </label>\n          <button type=\"submit\">Вхід</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginView;\n"],"names":["useLogInMutation","logIn","useState","email","setEmail","password","setPassword","handleChange","target","name","value","className","onSubmit","event","preventDefault","length","defaultModules","PNotifyMobile","alert","text","then","catch","autoComplete","type","id","onChange","pattern","title"],"sourceRoot":""}