{"version":3,"file":"static/js/LoginViewLazy.47fa43d9.chunk.js","mappings":"gPASA,MAgFA,EAhFkB,KAChB,MAAOA,IAASC,EAAAA,EAAAA,OACTC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,IAEnCG,EAAe,IAAkC,IAA/BC,QAAQ,KAAEC,EAAF,MAAQC,IAAc,EACpD,OAAQD,GACN,IAAK,QACH,OAAON,EAASO,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OANJ,EA+BF,OACE,4BACE,wCAEA,gBAAKC,UAAU,cAAf,UACE,kBAAMC,SA1BSC,UAEnB,GADAC,EAAMC,iBACFb,EAAMc,QAAU,GAAKX,EAASW,QAAU,EAK1C,OAJAC,EAAAA,eAAAA,IAAmBC,EAAe,CAAC,QACnCC,EAAAA,EAAAA,OAAM,CACJC,KAAO,uBAIX,UACQpB,EAAM,CAAEE,QAAOG,aAAYgB,SACjClB,EAAS,IACTG,EAAY,GAMb,CALC,MAAOgB,GACPL,EAAAA,eAAAA,IAAmBC,EAAe,CAAC,IACnCC,EAAAA,EAAAA,OAAM,CACJC,KAAO,GAAEE,EAAMC,KAAKC,WAEvB,GAQiCb,UAAU,aAAac,aAAa,MAAlE,WACE,qCAEE,kBACEC,KAAK,QACLC,GAAG,QACHlB,KAAK,QACLmB,YAAY,QACZlB,MAAOR,EACP2B,SAAUtB,EACVuB,UAAQ,EACRC,UAAW,EACXC,UAAW,SAGf,yCAEE,kBACEN,KAAK,WACLC,GAAG,WACHlB,KAAK,WACLmB,YAAY,WACZlB,MAAOL,EACPwB,SAAUtB,EACVuB,UAAQ,EACRC,UAAW,EACXC,UAAW,SAGf,mBAAQN,KAAK,SAASf,UAAU,aAAhC,0BAlCR,C","sources":["views/LoginView.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useLogInMutation } from '../redux/auth/auth-operation';\nimport { alert, defaultModules } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport * as PNotifyMobile from '@pnotify/mobile';\nimport '@pnotify/mobile/dist/PNotifyMobile.css';\nimport '../components/contactForm/ContactForm.css';\n\nconst LoginView = () => {\n  const [logIn] = useLogInMutation();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (email.length <= 0 || password.length <= 0) {\n      defaultModules.set(PNotifyMobile, {});\n      alert({\n        text: `Fill in the fields`,\n      });\n      return;\n    }\n    try {\n      await logIn({ email, password }).unwrap();\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      defaultModules.set(PNotifyMobile, {});\n      alert({\n        text: `${error.data.message}`,\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login page</h1>\n\n      <div className=\"ContactForm\">\n        <form onSubmit={handleSubmit} className=\"form-input\" autoComplete=\"off\">\n          <label>\n            Mail\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={handleChange}\n              required\n              minLength={3}\n              maxLength={50}\n            />\n          </label>\n          <label>\n            Password\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={handleChange}\n              required\n              minLength={6}\n              maxLength={40}\n            ></input>\n          </label>\n          <button type=\"submit\" className=\"formButton\">\n            Enter\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginView;\n"],"names":["logIn","useLogInMutation","email","setEmail","useState","password","setPassword","handleChange","target","name","value","className","onSubmit","async","event","preventDefault","length","defaultModules","PNotifyMobile","alert","text","unwrap","error","data","message","autoComplete","type","id","placeholder","onChange","required","minLength","maxLength"],"sourceRoot":""}