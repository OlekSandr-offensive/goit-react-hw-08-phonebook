{"version":3,"file":"static/js/LoginViewLazy.7ba991a0.chunk.js","mappings":"8NAkFA,UA1EkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAgBN,OACE,4BACE,mHAEA,gBAAKC,UAAU,cAAf,UACE,kBAAMC,SAjBS,SAAAC,GACnBA,EAAMC,iBACFX,EAAMY,QAAU,GAAKV,EAASU,QAAU,EAC1CC,EAAAA,GAAAA,MAAY,uBAGdhB,GAASiB,EAAAA,EAAAA,IAAM,CAAEd,MAAAA,EAAOE,SAAAA,KACxBL,GAASkB,EAAAA,EAAAA,MACTd,EAAS,IACTE,EAAY,MAQsBK,UAAU,aAAaQ,aAAa,MAAlE,WACE,+DAEE,kBACEC,KAAK,QACLC,GAAG,QACHZ,KAAK,QACLC,MAAOP,EACPmB,SAAUf,EACVgB,QAAQ,gBACRC,UAAQ,QAGZ,qEAUE,kBACEJ,KAAK,WACLC,GAAG,WACHZ,KAAK,WACLC,MAAOL,EACPiB,SAAUf,EACVgB,QAAQ,uCACRE,MAAM,6GACND,UAAQ,QAGZ,mBAAQJ,KAAK,SAAb,gD","sources":["views/LoginView.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn, fetchCurrentUser } from '../redux/auth/auth-operation';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../components/contactForm/ContactForm.css';\n\nconst LoginView = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (email.length <= 0 || password.length <= 0) {\n      toast.error('fill in the fields');\n      return;\n    }\n    dispatch(logIn({ email, password }));\n    dispatch(fetchCurrentUser());\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Сторінка логіна</h1>\n\n      <div className=\"ContactForm\">\n        <form onSubmit={handleSubmit} className=\"form-input\" autoComplete=\"off\">\n          <label>\n            Пошта\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              pattern=\"[^ @]*@[^ @]*\"\n              required\n            />\n          </label>\n          <label>\n            Пароль\n            {/* <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              minlength=\"8\"\n              required\n            /> */}\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n              title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\n              required\n            ></input>\n          </label>\n          <button type=\"submit\">Вхід</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginView;\n"],"names":["dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","className","onSubmit","event","preventDefault","length","toast","logIn","fetchCurrentUser","autoComplete","type","id","onChange","pattern","required","title"],"sourceRoot":""}